1, 登录微信公众平台,  在主界面左侧选择小程序管理

2, 点击认证并注册小程序 并注册小程序

3, 填写小程序信息,包括图标,名称,描述等

4, 在小程序平台上,  设置 ==> 开发设置 ==> 获取 AppID(小程序ID)

5, 下载开发者工具,并安装

6, 微信扫码(开发者工具),并创建小程序,填写项目名,appid,以及选择项目目录等一系列配置

7, 预览小程序, 左侧项目 ==> 最新更新时间:预览  ==> 微信扫码,即可运行


1, app.json  当前小程序相关配置文件
pages :  该属性用来配置当前小程序可访问的页面,小程序默认打开该属性下配置的第一个路径的页面

window : 用来做窗口相关配置  比如导航栏颜色,文字颜色,是否开启下拉刷新以及下拉刷新的背景色等等

tabBar : 设置底部导航栏,类型为map   
	list:为数组,用来配置单个底部导航栏的信息
	color : 文字颜色...
	selectedColor : 选中的文字颜色...
	注意!注意!注意!: 若想要tabBar显示在页面底部,则当前页面必须存在于list数组中

2, app.js 项目初始化
	需要调用APP()函数来实行初始化  App()函数内需要传一个参数,类型为obj
	该obj拥有生命周期函数,  onLaunch,(小程序初始化完成执行该函数) onShow(小程序被展示出来,执行该函数) onHide(小程序被隐藏,执行该函数)  onError(小程序出错,执行该函数)

	注意 : App()函数只能被执行一次,且只能在app.js文件当中执行 
		小程序提供了全局getApp()用于获取app实例  在App()函数内,无需调用getApp()来获取实例,使用this即可  不要私自调用app实例的声明周期函数

3, 页面的初始化 (page.js)
	通过page()函数来初始化页面,并且通过getApp()来获取app实例
	page()需要一个类型为obj的参数,obj的属性值有data (将数据暴露给视图模板), 还有各种生命周期函数,一些事件监听(比如用户的上拉刷新动作,用户下拉到底部的事件,以及用户的分享事件),还可以给该对象自定义函数,并且绑定到视图上的事件中


	路由: 
		初始化 : 向栈中添加新页面
		打开新页面 : 向栈中添加新页面
		重定向 : 将新的页面覆盖当前栈中的最后一个页面
		页面返回 : 将当前页移出栈,并指向上一个页面
		tab切换页 : 清空栈内所有页面,向栈中添加tab指向的新页面
		重启动 : 清空栈内所有的页面,并添加当前页

		wx.navigateTo(Obj): 打开新页面
			参数Obj为对象类型,拥有以下属性值:
				url : 打开的页面地址,可在地址后面添加参数,具体规则参考get传参
				success : 页面跳转成功后的回调函数,
				fail : 页面跳转失败后的回调函数,
				complete : 跳转动作完成之后执行的回调函数(无论跳转是否成功)

		wx.redirectTo : 重定向到新页面
		wx.reLaunch : 清空栈内所有页面,并添加指向的页面
		wx.switchTab : 通过程序来完成tab切换
		wx.navigateBack(obj) : 回退按钮   obj拥有delta属性,值类型为number  代表回退多少步

		注意: navigateTo() redirectTo() 不允许跳转到tab指定的页面